hub:
  db:
    type: sqlite-memory
  extraConfig:
    overrideServiceAccount: |
      # this script allows serviceAccountName to use dynamic naming based on {username}"
      async def override_service_account_hook(kube_spawner):
        if kube_spawner.service_account is not None:
          kube_spawner.service_account = kube_spawner._expand_user_properties(kube_spawner.service_account)

      c.KubeSpawner.pre_spawn_hook = override_service_account_hook

proxy:
  secretToken: "37d978c42bd042da78a1afa5a32dacaaee863ded4926eca2b30cc3005832d636"
  service:
    type: LoadBalancer
    annotations:
      kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/success-codes: 200,301,302
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 8080}]'  
    labels:
      app: jupyter
auth:
  dummy:
    password: "password"

singleuser:
  image:
    name: 720560070661.dkr.ecr.us-west-2.amazonaws.com/arc-jupyter
    tag: latest
    pullPolicy: IfNotPresent
  serviceAccountName: "{username}"
  storage:
    type: none
  memory:
    limit: 4G
    guarantee: 4G
  extraEnv:
    JAVA_OPTS: -Xmx4G
  extraSecurityContext:
    runAsUser: 65534
    runAsGroup: 65534
    allowPrivilegeEscalation: false  
  # storage:
  #   capacity: 50G
  #   type: dynamic
  #   dynamic:
  #     storageClass: csi-sc
  profileList:
  - default: True
    display_name: "1. Jupyterhub instance - 4GB Memory & 4vCPUs"
    description: "Small (default): Arc-Jupyter Development Environment"
    kubespawner_override:
      image: '720560070661.dkr.ecr.us-west-2.amazonaws.com/arc-jupyter:latest'
      ports:
        - Port: 8081
      lifecycle_hooks:
        postStart:
          exec:
            command: ["cp", "-r", "/opt/.jupyter", "/home/jovyan/.jupyter"]
  - display_name: "2. Jupyterhub instance - 30GB Memory & 4 vCPUs"
    description: "Big Arc-Jupyter Development Environment"
    kubespawner_override:
      image: '720560070661.dkr.ecr.us-west-2.amazonaws.com/arc-jupyter:latest'
      ports:
        - Port: 8081
      mem_limit: 30G
      mem_guaranttee: 30G
      extra_resource_limits:
        JAVA_OPTS: -Xmx8G
      # copy in the notebook customisations
      lifecycle_hooks:
        postStart:
          exec:
            command: ["cp", "-r", "/opt/.jupyter", "/home/jovyan/.jupyter"]