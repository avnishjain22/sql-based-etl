hub:
  db:
    type: sqlite-memory
  extraConfig:
    overrideServiceAccount: |
      # this script allows serviceAccountName to use dynamic naming based on {unescaped_username}"
      async def override_service_account_hook(kube_spawner):
        if kube_spawner.service_account is not None:
          kube_spawner.service_account = kube_spawner._expand_user_properties(kube_spawner.service_account)

      c.KubeSpawner.pre_spawn_hook = override_service_account_hook

  nodeSelector:
    lifecycle: Ec2Spot
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
          
proxy:
  secretToken: "37d978c42bd042da78a1afa5a32dacaaee863ded4926eca2b30cc3005832d636"
  service:
    type: ClusterIP
  # chp:
  #   nodeSelector:
  #     lifecycle: Ec2Spot    

  
auth:
  dummy:
    password: "supersecret!"

singleuser:
  defaultUrl: "/lab"
  nodeSelector:
    lifecycle: Ec2Spot
  image:
    name: ghcr.io/tripl-ai/arc-jupyter
    tag: latest
    pullPolicy: IfNotPresent
  lifecycle_hooks:
    postStart:
      exec:
        command: ["cp", "-r", "/opt/.jupyter", "/home/jovyan/.jupyter"]  
  serviceAccountName: "{unescaped_username}"
  storage:
    type: none
  cpu:
    guarantee: 0.25
    limit: 0.5
  memory:
    guarantee: 4G
    limit: 4G
  # extraEnvSecrets:
  #   - name: extraenv_name1
  #     valueFrom:
  #       secretKeyRef:
  #         name: name-secrets1
  #         key: ATHENA_ETL_CONF_S3A_ACCESS_KEY
  extraEnv:
    JAVA_OPTS: -Xmx4G
    ETL_CONF_DATALAKE_LOC: {{codeBucket}}  
  # extraNodeAffinity:
  #   required:
  #     - matchExpressions:
  #       - key: lifecycle
  #         operator: In
  #         values: [Ec2Spot]
  # extraSecurityContext:
  #   runAsUser: 65534
  #   fsGroup: 65534
  #   allowPrivilegeEscalation: false  
  # storage:
  #   capacity: 50G
  #   type: dynamic
  #   dynamic:
      # storageClass: csi-sc
      # subPath: '{username}'

  profileList:
  - default: True
    display_name: "Small (default): Arc-Jupyter Development Environment"
    description: "4GB Memory & 1vCPUs"
    kubespawner_override:
      cpu_guarantee: 0.5
      cpu_limit: 1
      mem_guarantee: 4G
      mem_limit: 10G
  - display_name: "Big Arc-Jupyter Development Environment"
    description: "15GB Memory & 2vCPUs"
    kubespawner_override:
      cpu_guarantee: 0.5
      cpu_limit: 2
      mem_guarantee: 10G
      mem_limit: 15G

prePuller:
  hook:
    enabled: false     

# scheduling:
#   userScheduler:
#     enabled: true
#     replicas: 1

debug:
  enabled: true      
