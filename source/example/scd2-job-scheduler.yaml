apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  # only need if using Argo console or CLI
  generateName: scd2-job-
  namespace: spark
  ## only need if use kubectl
  # name: scd2-job
spec:
  serviceAccountName: arcjob
  entrypoint: scd2-process
  ## must complete in 4h
  activeDeadlineSeconds: 14400
  ttlStrategy:
    # keep workflows for 8h
    secondsAfterCompletion: 28800
    SecondsAfterFailure: 28800
  templates:
  - name: scd2-process
    dag:
      tasks:
        - name: initial-load
          templateRef:
            name: spark-template
            template: smallJob
            clusterScope: true 
          arguments:
            parameters:
            - name: jobId
              value: initial-load
            - name: image
              value: {{ACCOUNTNUMBER}}.dkr.ecr.{{REGION}}.amazonaws.com/arc:latest
            - name: configUri
              value: "s3a://{{codeBucket}}/app_code/job/initial_load.ipynb"
            - name: parameters
              value: "--ETL_CONF_DATALAKE_LOC={{codeBucket}}"

        - name: delta-load
          templateRef:
            name: spark-template
            template: smallJob
            clusterScope: true 
          arguments:
            parameters:
            - name: jobId
              value: delta-load 
            - name: image
              value: {{ACCOUNTNUMBER}}.dkr.ecr.{{REGION}}.amazonaws.com/arc:latest
            - name: configUri
              value: "s3a://{{codeBucket}}/app_code/job/delta_load.ipynb"
            - name: parameters
              value: "--ETL_CONF_DATALAKE_LOC={{codeBucket}}"  
  
        - name: SCD2-merge
          dependencies: [initial-load, delta-load]
          templateRef:
            name: spark-template
            template: smallJob
            clusterScope: true 
          arguments:
            parameters:
            - name: jobId
              value: SCD2-merge 
            - name: image
              value: {{ACCOUNTNUMBER}}.dkr.ecr.{{REGION}}.amazonaws.com/arc:latest
            - name: configUri
              value: "s3a://{{codeBucket}}/app_code/job/SCD2_merge.ipynb"
            - name: parameters
              value: "--ETL_CONF_DATALAKE_LOC={{codeBucket}}"           
            - name: sparkConf
              value: "--conf spark.databricks.delta.merge.repartitionBeforeWrite.enabled=true" 
